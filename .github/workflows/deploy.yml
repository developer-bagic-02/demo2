name: Deploy to Tomcat Server

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package

      - name: Package compiled files
        run: |
          mkdir -p package/WEB-INF/classes
          cp -r target/classes/* package/WEB-INF/classes/
          cp -r src/main/webapp/* package/  # Adjust this path based on your webapp files location
          tar -czf package.tar.gz -C package .

      - name: List directory contents
        run: ls -la

      - name: Create SSH directory and known_hosts file
        run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
        shell: /usr/bin/bash -e {0}

      - name: Deploy to Tomcat Server
        env:
          JAVA_HOME: /opt/hostedtoolcache/Java_Adopt_jdk/17.0.11-9/x64
          SERVER_IP: ${{ secrets.SERVER_IP }}
          USERNAME: ${{ secrets.USERNAME }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          TOMCAT_DIR: ${{ secrets.TOMCAT_DIR }}
        run: |
          echo "Preparing to deploy to server..."
          
          # Do not echo sensitive data
          # echo "Using SERVER_IP: $SERVER_IP"
          # echo "Using USERNAME: $USERNAME"
          
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          
          echo "Attempting SCP transfer..."
          if scp -i private_key.pem package.tar.gz $USERNAME@$SERVER_IP:/tmp/; then
            echo "SCP transfer successful"
          else
            echo "SCP failed"
            exit 1
          fi

          echo "Restarting Tomcat server..."
          ssh -i private_key.pem $USERNAME@$SERVER_IP "bash -c 'sh /opt/tomcat/bin/shutdown.sh && sleep 5 && sudo sh /opt/tomcat/bin/startup.sh'"
          
          # Clean up the private key file
          rm private_key.pem
